一．进程池技术
１．必要性
  [1] 进程的创建和销毁过程消耗的计算机资源较多
  [2] 当任务量众多，每个任务在很短时间内完成，需要频繁的创建和销毁，此时对计算机的压力较大
  [3] 进程池技术很好的解决了上述问题

２．原理：创建一定数量的进程来处理事件，事件处理完毕进程不退出，而是继续处理其他事件．直到所有待处理事件全部处理
　　　　　完毕统一销毁进程．增加进程重复利用，降低资源消耗．

３．进程池实现
  [1] 创建进程池对象，放入适当的进程
  　　from multiprocessing import Pool
     Pool(processes)
     功能：创建进程池对象
     参数：指定进程数量，默认会根据系统自动判断

  [2] 将事件加入进程池执行队列
    (1)
    pool.apply_async(func,args,kwds)
    功能：使用进程池执行func函数
    参数：func 事件函数
    　　　args 元组　给func按照位置传参
    　　　kwds 字典　给func按照键值传参
    返回值：事件函数对象　　通过obj.get() 获取func返回值

    (2)
    pool.apply(func,args,kwds)
    功能：使用进程池同步执行func函数
    参数：func 事件函数
    　　　args 元组　给func按照位置传参
    　　　kwds 字典　给func按照键值传参

    (3)
    pool.map(func,iter)
    功能：将要做的事件加入进程池
    参数：func事件函数
    　　　iter迭代对象
    返回值：得到函数返回值列表

  [3] 关闭进程池
    pool.close()
    功能：关闭进程池

  [4] 回收进程池
    pool.join()
    功能：回收进程池中的进程