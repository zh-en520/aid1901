一．功能说明
  １．用户可以登录和注册
    －登录凭借用户名和密码登录
    －注册要求用户必须填写用户名密码，其他内容自定
    －用户信息能够长期保存

  ２．可以通过基本图形界面print提示用户输入命令
    －程序分为服务端和客户端
    －界面在客户端，服务端可以有一些简单的后台提示
    －服务端主要负责处理逻辑和数据
    －要求启动服务端能够满足多个客户端同时操作

  ３．用户启动客户端即进入一级界面，包含功能如下：
  　登录　注册　退出
    －退出后即退出客户端软件
    －登录成功可进入二级界面，失败保持一级界面
    －注册成功可以保持一级界面，也可以直接进入二级界面

  ４．用户登录状态即在二级界面，功能如下：
  　查单词　我的查询记录　注销
    －注销后返回一级界面，结束登录状态
    －查单词：可以循环输入单词，得到单词解释；输入＇＃＃＇结束单词查询状态，回到二级界面
    －我的查询记录：会得到当前登录用户的查词记录．可以自定查询所有记录还是最近十条．
    　　　　　　　　但是显示要求最近的在最前面．
    －格式：　name word time

  ５．单词本说明：
    －特点：
      1.每个单词占一行
      2.单词和解释之间一定有空格，个数不一定
      3.单词按从小到大排列
    
    －查词说明：
      1.可以忽略单词本中个别词组
      2.可以直接将单词本放到服务端，进行查询
      3.可以先将单词写入到数据库中，通过数据库查询．

  ６．操作步骤：
    －确定并发方案，确定套接字使用，确定细节
      ＊fork多进程，tcp套接字
      ＊注册后直接登录
      ＊注册内容　用户名　密码
      ＊文件查询
    －建立数据库：什么需要存在数据库，几个表，表关系，表结构？将单词导入数据库？
      ＊用户信息：id  name  passwd
      ＊历史信息：id  name  word  time
      ＊单词表：　id  word  mean
    －结构设计：如何封装，有几个功能，工作流程
      －函数封装
      －客户端启动-->一级界面-->登录-->二级界面-->发送请求-->得到内容
      －服务端循环接收请求-->处理请求-->将数据给客户端
      －功能模块：网络模型，登录，注册，查词，历史记录
    －完成通信搭建
      －
    －完成具体功能分析实现

  cookie1:
  sys.argv 从命令行获取参量
  －从命令行可以直接获取内容形成列表
  －以空格作为分割放在一个列表中(引号引起来内容算一项)
  －收集的所有内容均为字符串形式

  cookie2:
  import getpass
  passwd = getpass.getpass()
  功能：隐藏密码输入内容
  参数：输入提示默认为Passwd:
  返回值：输入的内容


  7.具体功能步骤
  －注册

    客户端：
    －输入姓名密码
    －将信息发送给服务端
    －得到服务器反馈
    －如果成功进入二级界面

    服务端：
    －接收请求
    －判断是否允许注册
    －反馈结果给客户端
    －如果可以注册则插入数据库
    
    －登录
     客户端：
    －输入用户名密码
    －发送请求
    －得到反馈

    服务端：
    －接收请求
    －判断是否可以登录
    －将结果返回给客户端

    8.二级界面
    查单词：
    客户端：
    －输入单词
    －发送请求
    －获取结果

    服务端：
    －接收请求
    －查找单词
    －将结果发送给客户端
    －插入历史记录

作业：
  －整理电子词典代码
  －查词改为数据库查询
  －数据库基本知识回顾