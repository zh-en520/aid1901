1、for 语句
 作用：
 用来遍历可迭代对象的数据元素
 遍历：经历、且只经历一遍
 （可迭代对象是指能依次获取数据元素的对象）
 可迭代对象包括：
 字符串str
 -------一下后面会讲------
 列表  list
 元祖  tuple
 字典  dict
 集合  set
 
 语法：
 for 变量列表 in 可迭代对象：
     语句块1
 else:
     语句块2
 说明：
 else 部分可以省略（同while语句类似）
 当在循环内用break语句终止for循环语句时，else子句部分语句不会执行
 内部语句的缩进同while语句类似
 ########
练习：
 1、任意输入一段字符串
 1）计算出这段字符串中空格的个数，并打印这个数
 2）计算出字符串的全部ascii字符的个数并打印
  注：ascii字符的编码在0~127范围内
  思考：用while语句能实现上述功能？
 3)输入一个字符串，从尾向头输出这个字符串的字符
 如：
 请输入：ABC中文
 打印：
 文
 中
 C
 B
 A
 ##########
range 函数
 作用：用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）
 格式：
 range （stop） 用来生成0～stop区间内的整数，直到stop为止（不包含stop）
 range（start,stop[,step]) 用来生成start~stop区间内的整数，直到stop为止，每个整数间隔step（不包含stop，且step可以是负整数）
 参见：
 》》》help(range)
 说明：
 此整数序列生成器生成从start开始，到stop结束（不包含），以step为步长的整数。
 range函数调用返回的对象是可迭代对象
 ##############
练习：
 1、用for 语句打印1-20的整数，打印在一行内
 2、求100以内哪些整数与自身+1的乘积再对11求余的结果等于8
 ###############
for 语句的注意事项：
 for 语句中range的调用是先调用一次，之后不再调用
for 语句内的变量可能不被创建的问题
 for x in range(4,0):
     print(x)
 else:
     print('x绑定',x) #报错
 print(x)
for 语句的嵌套
 示例：
 for x in 'ABC':
     for y in '123':
         print(x+y)#???
#################
练习：
 输入一个正整数，代表正方形的宽度和高度，打印正方形：
 如：
 输入：5
 打印：
  1 2 3 4 5
  1 2 3 4 5
  1 2 3 4 5
  1 2 3 4 5
  1 2 3 4 5
#################
continue 语句
 问题：
 如何让程序不再向下执行，重新开始一次新的循环
 作用：
 用于循环语句（while，for语句）中，不再执行本次循环continue之后的语句，重新开始一次新的循环。
 语法：
 continue
 说明：
 continue语句只能用在循环内部
 在while语句中执行continue语句，将会直接跳转到while语句的真值表达式处，重新判断循环条件
 在for语句中，执行continue语句，将会从可迭代对象中取下一个元素，绑定变量后再次进行循环

################
练习：
 求1~100之间所有不能被2,3,5,7中任意一个数整除的数的和（用continue实现）