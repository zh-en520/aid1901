day7回顾
元组和列表的区别
　小结：
　列表占用空间大于元组，但增，删，改的速度会快于元组
　元组的占用空间小，但增，删，改要创建新的对象，速度比较慢
　因为元组不可变，因此数据安全，不会被篡改

推导式：
　列表推导式
　[x**2 for x in range(10)]
　字典推导式
　{x:x**2 for x in range(10)]}

字典：
　创建：
　字面值：{}
　构造函数：dict()  dict(['AB','CD','EF',(1,2))   dict(A='B',C='D',E='F')
　推导式：{x:y for x in range(10)}
字典的操作：
　增加：d = {}  d['name'] = '小张'  d['age'] = 10
　修改：d['name'] = '张三丰'
　删除：del d['age']
　查看：print(d['name'])
　比较：==  !=
字典的方法：
 d.clear()
 d.copy()
 d.pop(key) 移除
 d.update(d2)
 d.get(key,defult=None)　取值
 d.keys()
 d.values()
 d.items()

目前已学容器：
　可变的：list dict
　不可变：str  tuple


day8##############################################################################

集合　set
　集合是可变的容器
　集合内的数据对象都是唯一的（不能重复多次的）
　集合是无序的存储结构，集合中的数据没有先后关系　　＃无序的结构的优点是修改／查找速度快
　集合中的元素必须是不可变对象
　集合是可迭代对象（可以用for语句遍历）
　集合是相当于只有键没有值的字典（键则是集合的数据）

创建空集合：
　set()
创建非空集合的字面值：
　s = {1,2,3}
集合的构造函数　set
　set() 创建一个空的集合对象（不能用｛｝来创建空集合）
　set(iterable)　用可迭代对象创建一个新的集合对象
　示例：
　s = set()　＃创建一个空集合
　s = {1,2,3}
　s = set('ABC')  #s = {'A','B','C'}  #＇ＡＢＣ＇是字符串，属于可迭代对象
　s = {1,2,3,2,3,4} ＃创建含有４个元素的集合，重复的会自动去除
　s = set(('ABC',123,'abc'))  #属于元组的集合＞＞＝s = {'ABC',123,'abc'}
　d = {1:'一',2:'二'}>>=  s = set(d)  #s = {1,2}
　s = {1,2,[3,4]} #报错，列表不能放在集合中存储

集合的运算：
　交集＆，并集｜，补集－，对称补集＾，子集＜．超集＞
　
　＆　生成两个集合的交集
 s1 = {1,2,3}
 s2 = {2,3,4}
 s3 = s1 & s2  # s3 = {2,3}
　
　｜　生成两个集合的并集
 s4 = s1 | s2  #s4 = {1,2,3,4}
　
　－　生成两个集合的补集
 s5 = s1 - s2  # s5 = {1},生成属于s1，但不属于s2的集合
　
　＾　生成两个集合的对称补集
 s6 = s1 ^ s2  # s6 = {1,4}

　＞　判断一个集合是另一个集合的超集
　＜　判断一个集合是另一个集合的子集
 s1 = {1,2,3}
 s2 = {2,3}
 s2 < s1  #true 子集
 s1 > s2  #true 超集

　＝＝　和　！＝　判断集合相同和不同
 s1 = {1,2,3}
 s2 = {2,3,1}
 s1 == s2  #true
 s1 != s2  #false

in 和not in 运算符
 等同于字典，in　用于判断某个值是否存在于集合中，存在则返回true
 not in 与in 返回值相反

集合和字典的优点：
 in / not in 

能用于集合的内建函数
　len(x)  max(x)  min(x)  sum(x)  any(x)   all(x)

练习：
　经理有：曹操，刘备，孙权
　技术员有：曹操，孙权，张飞，关羽
　用集合求：
　１，既是经理又是技术员的有：
　２，是经理，但不是技术员的有：
　３，是技术员，不是经理的都有：
　４，张飞是经理吗？
　５，身兼一职的人都有：
　６，经理和技术员共有几人？

Python中集合的方法：
　文档参见：html/set

集合是可迭代对象，可以用for语句进行遍历
 s = {1,2,3}
 for x in s :
     print(x)

练习：
　写程序，任意输入多个正整数，当输入小于零的数时结束输入
　１，打印出输入的这些数的种类有多少种？（去重）
　２，去掉重复的整数，把剩余的这些数的和打印出来．

集合推导式
　集合推导式是用可迭代对象创建集合的表达式
　语法：
　{表达式　for 变量　in 可迭代对象[if 真值表达式]}

固定集合　frozenset
 固定集合是不可变的，无序的，含有唯一元素的集合
 作用：
 固定集合可以作为字典的键，还可以作为集合的值
固定集合的构造函数　frozenset　
　frozenset()  #创造一个空的固定集合
　frozenset(iterable) #用可迭代对象创建一个新的固定集合
　
固定集合的运算：
　＆交集，｜并集，－补集，＾对称补集
＜　＜＝　＞　＞＝　＝＝　！＝
 in 和 not in 运算符

固定集合的方法：
　相当于集合的全部方法，去掉修改集合的方法