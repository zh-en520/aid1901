　　　　　　　　　　　　　　　　　　　文件：file
文件是用来数据存储的单位
文件通常用来长期存储数据
文件中的数据是以字节为单位进行顺序存储的
　　　　　文件的操作流程
1.打开文件
2.读／写文件（(input\output输入输出)
3.关闭文件
　　　　　　说明：
任何操作系统，一个应用程序同时打开文件的数量有最大限制数

　　　　　　　　　文件的打开函数
open(filename,mode='rt') 用于打开一个文件，成功返回文件交流对象，
　　　　　　　　　　　　　　　失败则触发OSError异常通知
　　　　　　　　　文件的关闭方法：
Ｆ.close() 关闭文件，释放系统资源
　　　　　　　　　文件的读操作方法：
F.readline()　读取一行数据，如果达到文件尾，则返回空字符串
F.readlines() 返回每行字符串的列表
F.read(size=-1) 从一个文件流中最多读取size个字符(文本文件)或字节(二进制文件),
　　　　　　　　　　如果不给出参数，则默认读取文件中全部的内容并返回．

　　　　　　　　文件的读写操作：
           文本文件的写方法：
F.write(text)　写一个字符串或字节串到文件流中，返回写入的字符数（文本文件）或字节数
　　　　　　　　　（二进制文件）
F.writelines(lines) 将一个字符串的列表写入到文件中


　　　　　　　　文件的模式字符的含义
文档参见：python_base_docs_heml/文件.html
示例见：file_write.py

 
　　　　　　　　　　　　　　文本文件的迭代读取
文件流对象是可迭代对象，迭代过程将以换行符'\n'作为分隔符依次获取
示例：
f = open('myfile.txt')
for line in f :
    print(line)


　　　　　　　　　　　　　　　　标准输入输出文件
sys.stdin 标准输入文件（默认为键盘），终端下ctrl+d可以输入文件结束符
sys.stdout　标准输出文件（默认为屏幕终端）
sys.stderr 标准错误输出文件（默认为屏幕终端）
模块名：sys
说明：
每一个python程序启动后都会有以上三个已经打开的文件供我们使用，这三个文件在不用
　时不需要手动关闭
示例见：stdout.py
示例：
myf = open('abc.txt','w')
print(1,2,3,4,sep='#',file=myf)


　　　　　　　　　　　　　　　　　　文本文件操作：
在文本文件模式下，读写文件需要用字符串进行操作
默认文件中存储的都是字符数据，在读写中会自动进行编码和解码操作

　　　　　　　二进制文件操作：
二进制文件模式字符：'b'
默认文件中存储的都是以字节(byte)为单位的数据，通常有人为规定的格式
对二进制文件的读写需要用字节串(bytes)或字节数组进行操作
如果文件中存储的是文字信息，需要手动进行编码解码操作
二进制文件的读方法：
f.read()
二进制文件的写方法：
f.write(x)＃返回写入的字节数


　　　　　　　　　文件的随机访问：
F.tell() 返回当前文件的读写位置(从文件头以字节为单位的整数)
F.seek(偏移量,相对位置)　设置文件的读写位置
　偏移量：
大于0的数代表向文件末尾方向移动
小于0的代表向文件头方向移动
　相对位置：
0　代表从文件头开始偏移
1　代表从当前读写位置开始偏移
2　代表从文件尾开始偏移

　　　　　　　　　　　　　　　　简单文件总结：：：
两种ＩＯ操作：
读read
写write
两种操作模式：
文件方式：'t'
二进制方式：'b'
文件的打开模式：
r 读
w 写，x写（不创建新文件），a追加写


　　　　　　　　　　　　汉字编码：
问题：十个汉字占几个字节?
答：
UTF-8编码　一个汉字占３个字节
GB18030　编码，一个汉字占２个或４个字节
GB2312　或　GBK　占３个字节
国标系列
　GB18030(二字节或四字节编码，共2个汉字)
    GBK(二字节编码,共21003个汉字，１９９５年)
        GB2312(二字节编码，共6763个汉字+682个全角字符，１９８０年)
国际标准：
　UNICODE<--->UTF-8
  (Linux/Mac OS X/ IOS / Android等常用)

utf-8(9-bit UNICODE Transformation Format)
  0x0080 ~ 0x007F 一个字节(ASCII)
  0x0080 ~ 0x07FF 二个字节
  0x0080 ~ 0xFFFF 三字节表示(中文落在此区)
python编码字符串
 'gb2312'
 '



　　　　　　　　　　　　编码注释：
在python源文件的第一行或第二行写入如下内容：
#-*- coding:gbk -*-
#设置源文件的编码格式为：gbk

#-*- coding:utf-8 -*-
#设置源文件的编码格式为：utf-8(python3默认)