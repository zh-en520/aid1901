day12 回顾:
  装饰器
    def 装饰器函数名(fn被装饰函数):
        def 新的函数名(形参列表):
            语句块
        return 新的函数名
    
    @装饰器函数名
    def 被装饰函数名(形参列表):
        语句块


  函数的文档字符串
    >>> help(函数名)  
    函数名.__doc__

  模块
    模块是函数,数据,类等组成的程序组
  模块的分类:
    1. 内建模块(built-in)
    2. 标准库模块
    3. 第三方模块
       pip install xxxxx
    4. 自定义模块

  模块的导入语句
    import 语句
        import math as m, time, sys
    from import 语句
        from math import sin, cos, factorial as fac
    from import *语句
        from math import *
  
  内建模块的使用
    math模块
    time模块
  


day13 笔记
  运行时系统模块 sys
    文档参见:
      python_base_docs_html/系统模块sys.html
    

自定义模块并导入
  要求:
    模块名文件后缀名必须以 .py 结尾
    模块文件名必须是合法的标识符
    避免名称和内建模块名冲突

  导入方式:
    import 语句
    from import 语句
    from import * 语句

  示例见:
    mymod.py

import 语句 搜索模块的路径顺序
  1. 搜索内建模块
  2. 搜索程序运行的路径(当前路径)
  3. sys.path 提供的路径

模块化编程的优点:
  有利于多人合作开发
  使代码更加易于维护
  提高代码的复用率
  模块化编程有助于解决函数名和变量名冲突,模块内的全局变量的作用
    域为模块内全局

模块的加载过程:
  在模块导入时,模块的所有语句会执行
  如果有一个模块已经导入,则再次导入时不会重新执行模块的语句

模块被导入和执行的过程:
  1. 先搜索相关路径找模块 xxx.py
  2. 判断是否有此模块对应的.pyc 文件,如果pyc文件比.py文件新
     则直接加载.pyc 文件 
  3. 否则用模块.py 生成.pyc文件并加载执行

  模块的编译
             编译            解释执行
  mymod.py  -----> mymod.pyc -----> python3


模块的预置属性
  模块的文档字符串
    __doc__属性
      用于绑定模块的文档字符串
  
  __file__属性
    __file__属性用来绑定模块所对应的路径
    注: 内建模块没有__file__属性

  模块的__name__属性
    作用:
      1. 记录模块名
      2. 用来判断是否为主模块
    说明:
      当此模块作为主模块运行时,__name__属性绑定'__main__'
      当此模块不是主模块,而是被其它模块导入时,此模块名为去
        掉.py 后缀的文件名
      
