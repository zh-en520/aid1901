day11回顾
函数式编程
　可重入函数：输入一定，结果必然一定（在函数内部不访问除局部变量以外的任何变量）
　高阶函数：
　１，函数返回一个函数
　２，函数可以接收函数作为参数传入
　三个内建的高阶函数：map,filter,sorted
　map:
　filter
　sorted
递归函数　recursion function
　１，遇到文件就比较文件名
　２，遇到文件夹再次进行递归遍历

闭包　closure：
 内嵌函数引用了外部嵌套函数的变量，这个内嵌函数就是闭包
特点：
　闭包使用的外部嵌套函数的变量会延迟销毁

全局变量和局部变量

day 12
装饰器　decorators(专业提高篇)
装饰器是一个函数，主要作用是用来包装另一个函数或类（后面才讲）
作用：
在不修改被装饰函数的源代码，不改变被装饰函数的调用方式的情况下添加或改变原函数的功能
语法：
def 装饰器函数名（fn):
    语句块
    return 函数对象

＠装饰器函数名＜换行＞
def 被装饰函数名（形参列表）：
    语句块

函数的文档字符串
　函数内第一次没有赋值给任何变量的字符串是此函数的文档字符串
语法：
　def 函数名(参数列表)
    '函数文档字符串'
    语句块
示例：
def myfunc(x,y):
  ...这是myfunc的文档字符串
  　　参数x代表xxx
  　　参数y代表yyy
  ...
  pass
说明:
　文档字符串通常用来说明本函数的功能和使用方法
　在交互环境下输入：help(函数名)　可以查看函数的文档字符串
　函数的文档字符串绑定在函数的＿doc_属性上

函数的__doc__属性:
　__doc__属性用于绑定函数的文档字符串
如：print(myfunc.__doc__)

函数定义的完整语法
函数定义语句def 语句的完整语法
[@装饰器名１]
[@装饰器名２]
[...]
def 函数名([位置形参]，[*元组形参],[命名关键字形参],[**字典形参])：
    文档字符串
    语句块
注：[]代表其中的内容可省略

练习(面试题)：
L = [1,2,3]
def f(n=0,lst=[]):
    lst.append(n)
f(4,L)
f(5,L)
f(100)
f(200)
执行结果是什么？为什么？

模块的概念　module
模块是一个包含有一系列数据，函数，类等组成的程序组
模块是一个文件，模块文件名通常以.py结尾
作用：
１，让一些相关的数据，函数，类等有逻辑的组织在一起，是逻辑结构更加清晰
２，模块中的数据，函数和类等可提供给其他函数或程序使用
模块的分类：
１，内置模块，在解析器内部可以直接使用
２，标准库模块，安装python时已安装且可直接使用
３，第三方模块（通常为开源），需要自己安装
　安装方法：
　$pip3 install 模块名
　$sudo pip3 install tensorflow
４，用户自己编写的模块（可以作为其他人的第三方模块）

模块的导入
　import 语句
语法：
　import 模块名１　[as 模块新名１],模块名２[as 模块新名２]，．．．
作用：
　将某模块整体导入到当前模块中
用法：
　模块名.属性名
示例：
 import math
 import sys,time
 print(math,factorial(5))#120
相关函数：
 dir(obj) 返回模块所有属性的列表
 help(obj) 查看模块相关的文档字符串

math.ceil(1.000009)#2
math.ceil(0.9999)#2向上取整
math.degrees(2math*pi)#360度
math.log(1024,2)#10求对数
log(x[,base])#base=e,e = 2.71828
math.radians(180)#pi,根据弧度求数
练习：
　公式：
周长＝２*pi*r(半径)
面积＝pi*r**2
1,输入一个圆的半径，打印出这个圆的面积
2,输入一个圆的面积，打印出这个圆的半径（要求用math模块内的函数和数据）

如何简化模块的输入：math.pi
111111111111111111111111111111111111111111111111111
import math as m#导入数学模块
m.pi=math.pi  或者
22222222222222222222222222222222222222222222222222222
　　from import 语句
　　from 模块名　import 模块属性名１　[as 属性新名１],模块属性名２ [as 属性新名２],...
　作用：
　将某模块内的一个或多个属性导入到当前模块的作用域
示例：
 from math import factorial as fac
 from math import sin
 from math import pi
 print(fac(5))
 print(sin(pi/2))
 33333333333333333333333333333333333333333333333333333
 from inport * 语句
 语法：
 from 模块名　import *
 作用：
 将某模块的所有属性导入到当前模块
 示例：
 from math import *
 sin(pi/2)
 factorial(6)


dir函数
格式：
　dir([对象]) 返回一个字符串列表
作用：
　如果没有参数，则返回这个对象的所有变量的列表
　如果给定一个对象作为参数，则返回这个对象的所有变量的列表
　　对于一个模块，返回这个模块的全部变量
　　对于一个类对象，返回类对象的所有变量，并递归基类对象的所有变量
　　对于其他对象，返回所有变量，类变量和基类变量

内建模块的使用：
数学模块
　模块名　math

时间模块　time:
 文档参见：python_base_docs_html/时间模块time.html

练习：
　写一个程序，输入你的出生年月日，计算：
1)你已经出生多少天？
2)你出生那天是星期几？
import time
a = time.time-time.mktime(1995,8,10,6,0,0,0,0,0)？？

练习：
写一个程序，以电子时钟的格式打印时间
格式为：
HH:MM:SS
编写一个闹钟程序，启动时设定时间，到时间后打印一句话：
时间到，然后退出程序

编写函数fun(n)　返回下列多项式的和
Sn = 1+1/1!+1/2!+1/3!+...+1/n!
求n为10时，Sn的值．