
1、字符串str()
 作用：用来记录文字／文本信息
 字符串的表示方法：
 ‘　　　　单引号
 “　　　　双引号
 ’‘’　　　三单引号
 ”“”　　　三双引号
 空字符串字面值的表示方式：
 ‘　’
 “　”
 ‘’‘　’‘’
 “”“　"""
 非空字符串字面值表示方式：
 'hello'
 "hello"
 '''hello'''
 """hello"""
 单引号和双引号的区别：
 　单引号内的双引号不算结束符
 　双引号内的单引号不算结束符
 三引号字符串：
 　以”“”或‘’‘开头或结尾的字符串为三引号字符串
 　作用：
 　三引号内可以包含单引号和双引号
 　三引号字符串中的换行会自动
２、用转义序列代表特殊的字符
　字符串字面值中用字符反斜杠\后跟一些字符代表特殊的一个字符
　\'  代表一个单引号 　
　\'' 代表一个双引号
　\\　代表一个反斜杠
　\n　换行符
　\r　返回光标至行首
　\f　换页
　\t　水平制表符
　\v　垂直制表符
　\b　倒退
　\a　响铃（无效）
　\0　字符串，字符值为零
　\ooo　ooo为三位八进制表示的字符串
　\xXX 　XX为十六进制表示的Unicode字符
　\UXXXXXXXX 　8个十六进制表示的Unicode字符
 ASCII编码：
 　$man ascii #仅UNIX/Linux
 常用的ASCII　编码：
 　字符　　　十进制　　　十六进制
 　’０‘　　　４８　　　　０x３０
 　’A'      65        0x41
   'a'      97        0x61  


求字符串的长度的函数len
 len（s)返回字符串字符的个数

1、raw 字符串（原始字符串）
  格式：
 r ' 字符串内容'
 r ''字符串内容''
 r '''字符串内容'''
 r """字符串内容"""
 作用：
  让转义符号\无效
2、字符串的运算方式
 运算符：
  +  +=   *   *=
  1、+  加号运算符用于拼接字符串
       x=''ABCD''+'1234'
        print(x)
    注：字符串只能和字符串相加
 2、 += 用原变量绑定字符串与右侧字符串拼接后变量绑定新的字符串
    x='ABCD'
   y='EFG'
  x+=y
 print(x)
    print(y)  
 3、* 运算符生成重复的字符串
   x=''ABCD''*3
   print(x)
   注：字符串只能和整数相乘
  4、*= 生成重复的字符串并让源变量绑定生成新的字符串
     x='123'
   x*=4
      print(x)  #123123123123

练习：
 写一个程序，打印一个高度为4行的矩形方框
  要求输入一个整数，此整数代表矩形的宽度，输出矩形
   如：
请输入矩形宽度：10
 打印：
  ########
  #      #
  #      #
  ########

3、字符串的比较运算
　运算符：<  <=  >  >=  ==  !=
  规则：
  　依次按编码进行两两比较，一旦不同，则比较结束，返回比较结果
  　当编码值与长度完全相同时，两个字符串相等
　示例：
　  'A'<'B'  #TRUE
   'ABC'>'ABB'#TRUE
   'ADC'<'ABC'#FALSE
   'ABC'>='123'#TRUE
   'AD'>'ABC'#TRUE
   'ABC'=='abc'#FALSE
   'ABCD'!='DCBA'#TRUE

4、in\not in 运算符
　作用：
　　in 用于序列、字典、集合中，用于判断某个值是否存在于容器中，如果存在返回true，否则返回false
　格式：
　　x in 字符串
　示例：
　　x='welcome to beijign!'
   'to' in x  #TRUE
   'abc' in x #FALSE
   'hello'not in x #TRUE
   'come' not in x #FALSE
  'e t' in x  #TRUE

5、字符串的索引操作index
 python字符串是不可以改变的字符序列
 语法：
 　字符串[整数表达式]
 说明：
 　python序列都可以用索引(index)来访问列中的对象
 　python序列的正向索引是从０开始的，第二个索引为１，最后一个索引为len(s)-1
 　python序列的反向索引是从－１开始的，－１代表最后一个，－２代表倒数第二个，以此类推，第一个是-len(s)
练习：
 输入一个字符串，打印如下内容：
 　１、打印这个字符串的第一个字符
 　２、打印这个字符串的最后一个字符
 　３、如果这个字符串的长度是奇数，打印中间这个字符
 　注：求字符串的长度的函数是len(x)。
6、切片　slice
 作用：
 　从字符串序列中取出相应的元素重新组成一个字符串序列
 语法：
 　字符串[(开始索引b):(结束索引e)(：步长s)]
  注：小括号()括起来的部分代表可省略
 说明：
 　开始索引是切片开始切的位置，０代表第一个元素，１代表第二个元素。。。－１代表最后一个。。
 结束索引是切片终止索引（但不包含终止点）
 步长是切片每次获取完当前元素后移动的方向和偏移量
 　没有步长，相当于步长为１（默认为１）
 　当步长为正整数时，取正向切片：
 　　开始索引默认为０，结束索引为最后一个元素的下一个位置
 　当步长为负整数时，取反向切片：
 　　反向切片时，默认的起始位置为最后一个元素，终止位置是第一个元素的前一个位置
 s='abcde'
 a=s[1:4]  #'bcd'
 a=s[1:]   #'bcde'
 a=s[:4]   #'abcd'
 a=s[0:2]  #'ab'
 a=s[1:1]  #''
 a=s[4:2]  #''空字符串
 a=s[0:5:2]#'ace'
 a-s[4:0:-2]#'ec'
练习：
　１、写一个程序，输入一个字符串，把字符串的第一个字符和最后一个字符去掉后，打印出这个字符串
　２、输入任意一个字符串，判断这个字符串是否是回文
　　回文是指中心对称的文字，如：
　　上海自来水来自海上

７、python3 中常用于序列的函数：
　len(x)  返回序列的长度
　max(x)  返回序列的最大值元素
　min(x)  返回序列的最小值元素
　示例：
　s='abcde'
 print(len(s))   #s
 print(max(s))   #e
 print(min(s))   #a
 
8、字符串编码转换函数：
　ord(c) 返回一个字符串c的Unicode编码值
　chr(i) 返回i这个值所对应的字符
　示例：
　ｉ＝ord('A')
  print('i=',i)
  print(i,'对象的字符是')

练习：
１、写一个程序输入一段字符串，如果字符串不为空，则把第一个字符的编码值打印出来
２、写一个程序，输入一个整数（０～６５５３５），打印出这个数所对应的字符。

9、整数转换为字符串函数
　bin(i) 将整数转换为二进制的字符串
　oct(i) 将整数转换为八进制的字符串
　hex(i) 将整数转换为十六进制的字符串
　示例：
　x=1980
　print(bin(x))
　print(oct(x))
　print(hex(x))
10、字符串的构造函数　str
 str(obj)  将对象转换为字符串
 示例：
 print('123'+456) #报错
 print('123'+str(456))#123456
 print(str(3.14)) #3.14

 11、python3中常用的字符串方法（method）
 　调用语法：
 　对象.方法名（方法传参）
 　示例：
  s='abc'
  s.isalpha()  #返回ｔｒｕｅ #仅在字符串中可用
  s.isdigit()  #返回false　＃仅在数字中可用
  123.isalpha()#报错
  文档参见：
  　python_base_docs_html/str.html

练习：
１、输入一个字符串，把输入的字符串终端空格全部去掉，打印出去掉空格的字符串
２、输入三行文字，让这三行文字在一个方框中居中显示，（注：不要输入中文）
　如：
　　请输入：hello!
　　请输入：I'm studing python!
　　请输入：I like python!
　显示如下：
　＋－－－－－－－－－－－ ＋
　｜      hello!       |
  |I'm studing python!|
  |   I like python!  |
  +--------------------+
  3、输入一段字符串，写程序判断你输入的文字是否全是数字，如果是数字，将您输入的数字加１后打印出来。