阶段性总结：（第一阶段：基础篇）

数据类型：
不可变的数据类型：
　str ,tuple ,frozenset ,bool ,int ,float ,complex ,bytes(字节串)
可变的数据类型：
　list ,dict ,set ,bytearray(字节数据)

特殊的值：
　Ｎone,True,Flase...

运算符：
　＋　－　＊　／　％　／／　＊＊
　＋＝　　－＝　　＊＝　　/=
　> >= < <= == !=
　is  is not
　in  not in
　not  and  or
　+  -
　＆＾＾－｜
　[]  [:]  [::](索引和切片)

表达式：
　１００
　１＋２
　sum([1,2,3])　＃函数调用也是表达式
　条件表达式：x if x>y else y
　全部的推导式：
　列表，字典，集合推导式（三种）
　
语句：
　表达式语句：
　　　　print('hello　world')
　赋值语句：
　　　　a = 100
       a = b = 200
       x,y,z = 1,2,3
　del 语句：
　if 语句：
　for　语句：
　while 语句：
　break　语句：
　continue 语句：
　pass 语句：

内建函数：
　用于容器的函数：
　len(x)  max(x)  min(x)  sum(x)  any(x)  all(x)
　构造函数：
　bool(x)  int(x)  float(x)  complex(x)  str(x)  list(x)  tuple(x)  dict(x)  set(x)  frozenset(x)

数值函数：
　abs(x)  round(x)  pow(x,y,z=None)

数字转字符串函数：
　bin(x)  oct(x)  hex(x)  ord(x)  chr(x)

创建可迭代对象的函数：
　range(start,stop,step)
　reversed(x)

输入输出函数：
　input(x)
　print(...)
.....
　id(x)
　type(x)

查看所有内建函数的方法：
　>>>help(__builtins__)




函数 function
　函数是可以重复执行的语句块，可以重复调用
　函数是面向过程编程的最小单位
作用：
　１，用于封装语句块，提高代码的重用性
　２，定义用户级别的函数

def 语句
　语法：
　def 函数名（形参列表）：
　　语句块
　作用：
　　用语句块创建一个函数，再用函数名绑定这个函数
　说明：
　　１，函数名就是语句块的名称
　　２，函数名的命名规则与变量名相同（函数名必须是标识符）
　　３，函数名是一个变量（不要轻易对其赋值）
　　４，函数如果不需要传入参数，则参数列表可以为空
　　５，函数有自己的名字空间，在函数外部不可以访问函数内部的变量，
　　　在函数内部可以访问函数外部的变量（但只能取值，不能赋值）
　示例见：
　　def.py
 
函数调用：
　语法：
　　函数名（实际调用传递参数）
　说明：
　　函数调用是一个表达式
　　如果函数内部没有return语句，则函数执行完毕后返回Ｎone
练习：
　写一个函数myadd,此函数中的参数列表里有两个参数x,y
　此函数的功能是打印两个实参的和（即x+y的和）
如：
　def myadd(...):
   myadd(100,200)  #打印３００
   myadd('ABC','123') ＃打印ABC123

　x = 100
  y = 200
  myadd()  #True
练习：
　写一个函数print_even,传入一个参数n，代表终止的整数
打印０　２　４　６　８...以内的所有偶数，打印在一行内
函数定义如下：
　def print.even(n) :
   ，，，
   ＃测试调用
   　print_even(10)

return 语句：
　语法：
　　return　［表达式］
　　注：[]代表其中的内容可以省略
　作用：
　　用于函数中，结束当前函数的执行，返回到调用该函数的地方，同时返回一个对象的引用关系
　说明：
　　１，return　语句后跟的表达式可以省略，省略后相当于return Ｎone
　　２，如果函数内没有return语句，则函数执行完毕最后一条语句后返回Ｎone（相当于最后加了一条return None语句）

练习：
　写一个函数mymax,实现返回两个数的最大值
　如：
　def mymax(a,b):
　...
　print(mymax(100,200))  #200
　print(mymax('ABC','123'))  #ABC


2,定义两个函数：
　def sum3(a,b,c):
  ...  #此函数用于返回三个数的和
  def pow3(x):
  ...   #此函数用于返回x的三次方（立方）
  用以上两个函数计算：
  1)计算１的立方＋２的平方＋３的立方
  2)计算１＋２＋３的和的立方
  （即：１**3+2**3+3**3和(1+2+3)**3)
3,＜＜学生信息管理项目＞＞
　输入任意个学生的姓名，年龄，成绩，每个学生的信息存入字典，然后放入到列表中，每个学生需要手动输入
　如：
　请输入姓名：tarena
　请输入年龄：17
　请输入成绩：99
　请输入姓名：name2
　请输入年龄：20
　请输入成绩：88
　请输入姓名：<回车结束输入>
内部存储格式如下：
　[{'name':'tarena','age':17,'score':99},
　 {'name':'name2','age':20,'score':88}]
输入完毕后，以表格形式打印上述信息：
＋－－－－－－－－－＋－－－－－－－－＋－－－－－－－－＋
｜　　　姓名　　　　｜　　　年龄　　　｜　　　成绩　　　｜
＋－－－－－－－－－＋－－－－－－－－＋－－－－－－－－＋
｜　 　tarena     |      17      |      99      |
｜     name 　　  |      20      |      99      |
＋－－－－－－－－－＋－－－－－－－－＋－－－－－－－－＋