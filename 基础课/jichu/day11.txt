day  11

eval 函数　和　exec　函数
eval 函数：
格式：
eval (source,globals=None,local=None)把一个字符串source当成一个表达式来执行，ｆａｎｔｉ表达式执行的结果
参数：
source符合python语法规则的字符串
globals声明全局作用域的字典
licals声明局部作用域的字典

exec　函数：
作用：把一个字符串当成程序来执行
格式：exec(source,globals=None,locals=None)
参数：同eval参数

函数式编程：functional programing
函数式编程是指用一系列函数解决问题
函数编程的优点：
用一个函数完成细小的功能，一系列函数的任意组合可以解决大问题
函数仅接受输入并生成输出，不包含任何能够影响输出的内部状态

函数的可重入性：
当一个函数不访问除局部变量以外的变量时，这样的函数称为可重入函数
特点：
输入一定，结果必须一定

高阶函数　high order functions
定义：满足下列条件中一个或多个函数即为高阶函数
１，函数接受一个或多个函数作为参数传入
２，函数返回一个函数
map函数：
格式：
map(func,iterable1,iterable2,,,)
作用：返回一个可迭代对象，此可迭代对象的数据来自于iterable1,,iterable2数据被func处理后，得到处理后的结果
说明：
当最短的一个可迭代对象不再提供数据时，迭代结束
参数：
func　处理函数
iterable1 和iterable2,可迭代对象，可以有
练习：
求1**2+2**2+3**2+...+9**2的和
求1**３+2**３+3**３+...+9**３的和
求1**９+2**８+3**７+...+9**１的和

filter函数：
　格式：
filter(func,iterable)
　作用：
筛选可迭代对象iterable中的数据，返回一个可迭代对象，此可迭代对象只提供iterable提供的数据中满足条件的数据
　参数说明：
func 含有一个形参的处理函数，此参数传入值为iterable中提供的数据，此函数func将对iterable中的每个元素进行求布尔值，返回true则保留
返回false，则丢弃此数据
iterable提供数据的可迭代对象

练习：
１，用filter函数生成１～２０之间的全部偶数：
　将这些数字存于列表中，再打印这个列表
２，用filter函数将１～１００之间所有的素数放到Ｌ列表中，再打印出这个列表

sorted函数
　作用：
将元可迭代对象的数据进行排序，生成排序后的列表
　格式：
sotred(iterable,key=None,reversr=false)
　参数说明：
iterable 可迭代对象
key      函数是用来提供一个值，这个值将作为排序的依据
reverse  标志排序的顺序

练习：
names = ['Tom',;Jerry','Spike','Tyke']
排序的依据是最后一个字符的编码值大小，如果最后一个，依次向前对比，即依据为：
．．．
排序后结果为：

递归函数　recursion
函数直接或间接的调用自身
程序描述：
story():
    print('在讲故事')
story()
递归示意：
＃函数直接的调用自身
def fa():
    fa()
fa()
#函数间接的调用自身
def fa():
    fb()
def fb():
    fa()
fa()
递归说明：
　递归一定要控制递归的层数，当符合某一条件时要终止递归调用，几乎所有的递归都能用while循环来代替
递归的优点：
优点：
　递归可以把问题简单化，让思路更为清晰，代码更简洁
缺点：
　递归因系统环境影响大，当递归深度太大时，可能会得到不可预知的结果
递归函数的调用过程分为两个阶段：
　递归函数的调用过程分为两个阶段：
递推阶段：
从原问题出发，按递归公式递推从未知到已知，最终达到递归终止条件
　回归阶段：
按递归终止条件，逆向代入递归公式，回归原问题求解．

练习：
已知有５位朋友在一起
第五位朋友比第四位朋友大２岁
第四位朋友比第三位朋友大２岁
第三位朋友比第二位朋友大２岁
第二位朋友比第一位朋友大２岁
第一位朋友说他１０岁了
编写函数，算出第五位朋友几岁，第三位朋友几岁

闭包　closure
　闭包是指引用了此函数外部嵌套函数的变量的函数
闭包必须满足三个条件：
　１，必须有一个内嵌函数
　２，内嵌函数必须引用外部函数中的变量
　３，外部函数返回值必须是内嵌函数
思考：全局变量和局部变量的区别？
全局变量：一直存在，谁都可以访问和修改
局部变量：只是在调用时存在，只能在函数内部进行访问和修改
　说明：
　闭包内，外部嵌套函数存储的变量会延迟销毁
　当闭包（内嵌函数）被释放时，外部嵌套函数才会被释放

练习：
１，写程序算出１～２０的阶乘的和
　即：
　１！＋２！＋３！＋４！．．＋２０！
２，已知有列表：
　L = [[3,5,8],10,[[13,14],15,18],20]
1)写一个函数print_list(list)打印出所有的数据
　print_list(L)#打印　３　５　８　１０　１３　１４．．．
　注：不要求打印在一行内
2)写一个函数sum_list(lst)返回这个列表中所有数字的和
　print(sum_list(L))#106
 注：
 　type(x) 可以返回一个对象的类型
 如：
 　>>>type(10) is int #true
   >>>type([3,5,8])is list #true
3)改写之前的学生信息管理程序，要求添加四个功能：
　|5)按学生成绩高－低显示学生信息｜
　|6)按学生成绩低－高显示学生信息｜
　|7)按学生年龄高－低显示学生信息｜
　|8)按学生年龄低－高显示学生信息｜